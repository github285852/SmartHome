u8 atk_8266_wifista_test(void)
{ u8 cnt=0;
	u8 netpro=0;	//网络模式
	u8 i ;
	short temp=0 ;
	char *a ;
	char *shake="shake";
  char cStr[30] ;
  u8 flag = 0;
	u8 flag1 = 0;
  u8 ucArray_ID [ 4 ];                                                                                             //????IC?????UID(IC????)
	u8 ucStatusReturn;   
	u8 timex=0; 
	u8 ipbuf[16]; 	//IP缓存
	u8 *p;
	u16 t=999;		//加速第一次获取链接状态
	u8 res=0;
	u16 rlen=0;
	u8 constate=0;	//连接状态
	
	p=mymalloc(SRAMIN,32);							//申请32字节内存
	atk_8266_send_cmd("AT+CWMODE=1","OK",50);		//设置WIFI STA模式
	atk_8266_send_cmd("AT+RST","OK",20);		//DHCP服务器关闭(仅AP模式有效) 
	delay_ms(1000);         //延时3S等待重启成功
	delay_ms(1000);
	delay_ms(1000);
	delay_ms(1000);
	//设置连接到的WIFI网络名称/加密方式/密码,这几个参数需要根据您自己的路由器设置进行修改!! 
	sprintf((char*)p,"AT+CWJAP=\"%s\",\"%s\"",wifista_ssid,wifista_password);//设置无线参数:ssid,密码
	while(atk_8266_send_cmd(p,"WIFI GOT IP",300));					//连接目标路由器,并且获得IP

	netpro|=atk_8266_netpro_sel(50,30,(u8*)ATK_ESP8266_CWMODE_TBL[0]);	//选择网络模式

	     //TCP
				LCD_Clear(WHITE);
				POINT_COLOR=RED;
				Show_Str_Mid(0,30,"ATK-ESP WIFI-STA 测试",16,240); 
				Show_Str(30,50,200,16,"正在配置ATK-ESP模块,请稍等...",12,0);
				atk_8266_send_cmd("AT+CIPMUX=1","OK",20);   //0：单连接，1：多连接
				sprintf((char*)p,"AT+CIPSERVER=1,%s",(u8*)portnum);    //开启Server模式(0，关闭；1，打开)，端口号为portnum
				atk_8266_send_cmd(p,"OK",50);   


		  LCD_Clear(WHITE);
			POINT_COLOR=RED;
			Show_Str_Mid(0,30,"ATK-ESP WIFI-STA 测试",16,240);
			Show_Str(30,50,200,16,"正在配置ATK-ESP模块,请稍等...",12,0);			
			LCD_Fill(30,50,239,50+12,WHITE);			//清除之前的显示
			Show_Str(30,50,200,16,"WK_UP:退出测试  KEY0:发送数据",12,0);
			LCD_Fill(30,80,239,80+12,WHITE);
			atk_8266_get_wanip(ipbuf);//服务器模式,获取WAN IP
			sprintf((char*)p,"IP地址:%s 端口:%s",ipbuf,(u8*)portnum);
			Show_Str(30,65,200,12,p,12,0);				//显示IP地址和端口	
			Show_Str(30,80,200,12,"状态:",12,0); 		//连接状态
			Show_Str(120,80,200,12,"模式:",12,0); 		//连接状态
			Show_Str(30,100,200,12,"发送数据:",12,0); 	//发送数据
			Show_Str(30,115,200,12,"接收数据:",12,0);	//接收数据
			atk_8266_wificonf_show(30,180,"请设置路由器无线参数为:",(u8*)wifista_ssid,(u8*)wifista_encryption,(u8*)wifista_password);
			POINT_COLOR=BLUE;
			Show_Str(120+30,80,200,12,(u8*)ATK_ESP8266_WORKMODE_TBL[netpro],12,0); 		//连接状态
			USART3_RX_STA=0;
			while(1)
			{
			       cnt ++  ;//计数，当收到open之后开始
			      temp=DS18B20_Get_Temp();//通过ds18b20采集的数据
			    	if(SHAKE==0)
				   {
				    atk_8266_send_cmd("AT+CIPSEND=0,5","OK",200);  //发送指定长度的数据 等待应答“OK“  等待2秒
					 
						atk_8266_send_data(shake,"OK",100);  //发送指定长度的数据，发生shake 表示振动发生
				   }
					 
					 //当温度大于30度时表示温度过高，蜂鸣器报警
					  if((temp/10)>=30)
            {
						    BEEP=1 ;//，蜂鸣器报警
						}
						else
						{
						   BEEP= 0;
						}
				    sprintf((char*)p,"t:%02d.%dC",temp/10,temp%10);//temp/10 表示整数部分、temp%10表示小数部分
				    // sprintf((char*)p,"1111111111111111111\n");
						Show_Str(30+54,100,200,12,p,12,0); //显示
						atk_8266_send_cmd("AT+CIPSEND=0,7","OK",200);  //发送指定长度的数据
					 
						atk_8266_send_data(p,"OK",100);  //发送指定长度的数据			
	
	   
			ucStatusReturn = PcdRequest ( PICC_REQALL, ucArray_ID );	//寻卡
				 if ( ucStatusReturn == MI_OK  )
		{
			if ( PcdAnticoll ( ucArray_ID ) == MI_OK )   //防冲撞                                                                //???(???????????????,?????????????????)
			{  
			
				sprintf ( cStr,"ID:%02d%02d%02d%02d%s" ,ucArray_ID [ 0 ], ucArray_ID [ 1 ], ucArray_ID [ 2 ], ucArray_ID [ 3 ],p );
				LCD_ShowString ( 0,42*16,200,16,16,cStr);
				atk_8266_send_cmd("AT+CIPSEND=0,20","OK",200);  //发送指定长度的数据 等待应答“OK“  等待2秒
				atk_8266_send_data((u8 *)cStr,"OK",100);  //发送卡号
		
				}
	  	}
				
			
				if(flag) //当收到“open”时  flag = 1  
				{ 
					GPIO_SetBits(GPIOF,GPIO_Pin_11) ;//打开继电器

					 for(i=0;i<10;i++)   //蜂鸣器提示开门
				  { 
					  BEEP=!BEEP ;
				    delay_ms(100) ;
					}
					flag = 0 ;
					BEEP = 0;
					cnt = 0;
				}
				else if (cnt==10)   // 程序循环十次后 关闭继电器
				{
				   GPIO_ResetBits(GPIOF,GPIO_Pin_11) ;
				}
					
			
			
	       delay_ms(1000) ;
			   
				if(USART3_RX_STA&0X8000)		//接收到一次数据了
				{  
					a=(char *)(USART3_RX_BUF);
			 	if(match_string(a,"open")== 0) //从数据中寻找 字符串“open”
					{
					   LED0=!LED0 ;
						 
					}
					else{
						LED1=!LED1 ;
					   flag = 1;
					}
					

			    rlen=USART3_RX_STA&0X7FFF;	//得到本次接收到的数据长度
					USART3_RX_BUF[rlen]=0;		//添加结束符 
			//		printf("%s",USART3_RX_BUF);	//发送到串口   
					sprintf((char*)p,"收到%d字节,内容如下",rlen);//接收到的字节数 
					LCD_Fill(30+54,115,239,130,WHITE);
					POINT_COLOR=BRED;
					Show_Str(30+54,115,156,12,p,12,0); 			//显示接收到的数据长度
					POINT_COLOR=BLUE;
					LCD_Fill(30,130,239,319,WHITE);
        
					Show_Str(30,130,180,190,USART3_RX_BUF,12,0);//显示接收到的数据  
					
					USART3_RX_STA=0;
					if(constate!='+')t=1000;		//状态为还未连接,立即更新连接状态
					else t=0;                   //状态为已经连接了,10秒后再检查
				}  
				if(t==1000)//连续10秒钟没有收到任何数据,检查连接是不是还存在.
				{

					constate=atk_8266_consta_check();//得到连接状态
					if(constate=='+')Show_Str(30+30,80,200,12,"连接成功",12,0);  //连接状态
					else Show_Str(30+30,80,200,12,"连接失败",12,0); 	 
					t=0;
				}
				
				if((t%20)==0);
				atk_8266_at_response(1);

			}
	myfree(SRAMIN,p);		//释放内存 
	return res;		
} 
